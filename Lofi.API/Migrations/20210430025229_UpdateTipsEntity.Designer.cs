// <auto-generated />
using System;
using Lofi.API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Lofi.API.Migrations
{
    [DbContext(typeof(LofiContext))]
    [Migration("20210430025229_UpdateTipsEntity")]
    partial class UpdateTipsEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Lofi.API.Database.Entities.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CoverPhotoFileId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedDate")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<Guid?>("UniqueId")
                        .IsRequired()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CoverPhotoFileId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Lofi.API.Database.Entities.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AlbumId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ProfilePictureId")
                        .HasColumnType("integer");

                    b.Property<int?>("TrackId")
                        .HasColumnType("integer");

                    b.Property<string>("WalletAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ProfilePictureId");

                    b.HasIndex("TrackId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("Lofi.API.Database.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AlbumId")
                        .HasColumnType("integer");

                    b.Property<string>("Desription")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ParentGenreId")
                        .HasColumnType("integer");

                    b.Property<int?>("TrackId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ParentGenreId");

                    b.HasIndex("TrackId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Lofi.API.Database.Entities.Tip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("IntegratedPaymentAddress")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<DateTime?>("PayedOutDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("PaymentId")
                        .HasColumnType("integer");

                    b.Property<string>("PaymentIdHex")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TrackId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<DateTime?>("TransactionConfirmedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TransactionHash")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TrackId");

                    b.ToTable("Tips");
                });

            modelBuilder.Entity("Lofi.API.Database.Entities.Track", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AlbumId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("AudioFileId")
                        .HasColumnType("integer");

                    b.Property<int?>("CoverPhotoFileId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TrackNumber")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("AudioFileId");

                    b.HasIndex("CoverPhotoFileId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("Lofi.API.Database.Entities.UploadedFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("Bytes")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Extension")
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("UniqueId")
                        .IsRequired()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Lofi.API.Database.Entities.Album", b =>
                {
                    b.HasOne("Lofi.API.Database.Entities.UploadedFile", "CoverPhotoFile")
                        .WithMany()
                        .HasForeignKey("CoverPhotoFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoverPhotoFile");
                });

            modelBuilder.Entity("Lofi.API.Database.Entities.Artist", b =>
                {
                    b.HasOne("Lofi.API.Database.Entities.Album", null)
                        .WithMany("Artists")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Lofi.API.Database.Entities.UploadedFile", "ProfilePicture")
                        .WithMany()
                        .HasForeignKey("ProfilePictureId");

                    b.HasOne("Lofi.API.Database.Entities.Track", null)
                        .WithMany("Artists")
                        .HasForeignKey("TrackId");

                    b.Navigation("ProfilePicture");
                });

            modelBuilder.Entity("Lofi.API.Database.Entities.Genre", b =>
                {
                    b.HasOne("Lofi.API.Database.Entities.Album", null)
                        .WithMany("Genres")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Lofi.API.Database.Entities.Genre", "ParentGenre")
                        .WithMany()
                        .HasForeignKey("ParentGenreId");

                    b.HasOne("Lofi.API.Database.Entities.Track", null)
                        .WithMany("Genres")
                        .HasForeignKey("TrackId");

                    b.Navigation("ParentGenre");
                });

            modelBuilder.Entity("Lofi.API.Database.Entities.Tip", b =>
                {
                    b.HasOne("Lofi.API.Database.Entities.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");
                });

            modelBuilder.Entity("Lofi.API.Database.Entities.Track", b =>
                {
                    b.HasOne("Lofi.API.Database.Entities.Album", "Album")
                        .WithMany("Tracks")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lofi.API.Database.Entities.UploadedFile", "AudioFile")
                        .WithMany()
                        .HasForeignKey("AudioFileId");

                    b.HasOne("Lofi.API.Database.Entities.UploadedFile", "CoverPhotoFile")
                        .WithMany()
                        .HasForeignKey("CoverPhotoFileId");

                    b.Navigation("Album");

                    b.Navigation("AudioFile");

                    b.Navigation("CoverPhotoFile");
                });

            modelBuilder.Entity("Lofi.API.Database.Entities.Album", b =>
                {
                    b.Navigation("Artists");

                    b.Navigation("Genres");

                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("Lofi.API.Database.Entities.Track", b =>
                {
                    b.Navigation("Artists");

                    b.Navigation("Genres");
                });
#pragma warning restore 612, 618
        }
    }
}
